version: 0.7.2.{build}-{branch}
configuration: Release
platform: Any CPU
clone_depth: 1
clone_folder: C:\consul
init:
- if "%APPVEYOR_REPO_TAG%" == "true" set APPVEYOR_BUILD_VERSION=%APPVEYOR_REPO_TAG_NAME%
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(APPVEYOR_BUILD_VERSION)
  assembly_file_version: $(APPVEYOR_BUILD_VERSION)
  assembly_informational_version: $(APPVEYOR_BUILD_VERSION)
environment:
  CONSUL_VERSION: 0.7.2
  CLI_VERSION: Latest
install:
- cinst: 7zip.commandline
- ps: mkdir -Force c:\consul_install | Out-Null
- ps: |-
    $consul_zip = "consul_$($env:CONSUL_VERSION)_windows_386.zip"
    $consul_url = "https://releases.hashicorp.com/consul/$($env:CONSUL_VERSION)/$consul_zip"
    if (!(test-path "c:\consul_install\$consul_zip")) {
      write-output "Downloading $consul_url"
      Invoke-WebRequest $consul_url -OutFile "c:\consul_install\$consul_zip"
    } else {write-output "Using cached $consul_zip"}
    7z x -y c:\consul_install\$consul_zip -oc:\consul\consul.test
cache:
- C:\ProgramData\chocolatey\bin -> appveyor.yml
- C:\ProgramData\chocolatey\lib -> appveyor.yml
- C:\consul_install -> appveyor.yml
- packages -> **\packages.config
- '%USERPROFILE%\.nuget\packages -> **\project.json'
nuget:
  disable_publish_on_pr: true
before_build:
- dotnet --info
- dotnet restore
build_script:
- dotnet --verbose build Consul --configuration Release
- cmd: |-
    move %APPVEYOR_BUILD_FOLDER%\Consul\bin\release\net45 %APPVEYOR_BUILD_FOLDER%\Consul\bin\release\net45unmerged
    cd %APPVEYOR_BUILD_FOLDER%\Consul\bin\release\net45unmerged
    %USERPROFILE%\.nuget\packages\ILRepack\2.0.10\tools\ILRepack.exe /keyfile:%APPVEYOR_BUILD_FOLDER%\assets\consuldotnet.snk /parallel /internalize /out:%APPVEYOR_BUILD_FOLDER%\Consul\bin\release\net45\Consul.dll Consul.dll Newtonsoft.Json.dll
    cd %APPVEYOR_BUILD_FOLDER%
    del /s /q %APPVEYOR_BUILD_FOLDER%\Consul\bin\release\net45unmerged
- dotnet --verbose pack Consul --configuration Release
before_test:
- ps: >-
    $consulJob = Start-Job {C:\consul\Consul.Test\consul.exe agent -dev -config-file C:\consul\Consul.Test\test_config.json}

    $running = $false

    do {
      Receive-Job -Job $consulJob
      if ($running -and $consulJob.State -ne "Running") {break}
      if ($consulJob.State -eq "Running") {
        $running = $true
        try {$result = convertfrom-json (invoke-webrequest -UseBasicParsing -TimeoutSec 1 -Uri http://localhost:8500/v1/status/leader).Content; sleep 1} catch {write-output "Waiting for Consul to come up..."}
      }
    } until (![string]::IsNullOrEmpty($result))

    Receive-Job $consulJob
test_script:
- dotnet --verbose build Consul.Test --configuration Release
- dotnet --verbose test Consul.Test --configuration Release
after_test:
- ps: Get-Job | Stop-Job
- ps: Get-Job | Receive-Job
artifacts:
- path: '**\*.nupkg'
deploy:
- provider: NuGet
  api_key:
    secure: dv44i0f5BvM3LZRUU/B0emsLEIbO9geASxNnMd074SXPligvsk81P8nzY/3m2z/z
  on:
    APPVEYOR_REPO_TAG: true
